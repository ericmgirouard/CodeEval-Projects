package Easy;
import java.lang.reflect.Array;
import java.util.*;
public class RoadTrip {

	public static void main(String[] args) {
		String line = "Epmv,20003; Iezxosv,7698; Gfyrt,19016; Xzvmegh,9315; Firsmqb,18725; Uemhgcs,296; Xbgrt,941; Gets,1977; Cjdiu,9702; Otaxlyk,18462; Nygikzd,2848; Qrfgeuj,13122; Zvka,5861; Xkjc,20451; Wrioat,13452; Xgas,16426; Bguhzt,10837; Rbve,7147; Wsjyn,1250; Zeyqkm,10641; Jbqs,5636; Tnexawz,6063; Rfbcog,4207; Knzpaif,4274; Kenhmjc,21491; Rhaet,24789; Pwgdsr,25783; Hdek,11816; Nxvima,14810; Mfntx,5931; Coqd,18774; Ucxtz,20675; Bpjhe,3110; Rmtheb,20850; Qvzhld,21589; Lprike,11459; Zrqlgd,24645; Ebsqgj,3566; Mazl,5445; Gjtzhpf,7219; Kvudae,9769; Isjgm,23416; Fizx,14974; Bcuadit,15365; Lbwifz,15947; Embi,5940; Uvoai,559; Zdlrx,3277; Jtdfmao,21736; Cujm,7925; Yqsf,10475; Gdrjh,2295; Jxhrtqo,11293; Bleampo,12757; Foxmp,13202; Nloxh,6133; Tdrg,17014; Odramxz,12693; Mkwie,25006; Ilpj,4870; Xokpji,12401; Bgwrz,18804; Uiefkht,20380; Nult,20720; Dtvehgj,206; Cifabsg,19556; Mlbd,23272; Maonb,8730; Zhkrtv,551; Iygvqfr,1059; Zstalvo,25373; Dzkbwmx,18879; Uvepa,14907; Rqlzw,17075; Ebpzkna,6875; Xpayed,6231; Nsly,11845; Oqjntr,22796; Jhyflqr,2126; Mkngdrt,11675; Wnij,429; Tens,6707; Bohyfge,3818; Mzfs,23896; Tfqhzl,25421; Iqgh,3497; Ymeutid,1696; Bygxup,10683; Viymbu,1199; Klrqcd,17741; Fnpr,20729; Tncbo,2681; Acol,7857; Kqjzx,7545; Jpzygvh,24226; Nthfubl,19759; Ubvpjn,5510; Jsrfaiq,358; Tnypkg,8000; Cudn,2381; Ydkmz,9201; Kwof,2787; Eimyqx,23741; Cpvuqo,1966; Htwp,25729; Ucljp,66; Bkqax,6110; Fprhlye,16001; Mzyplsc,13706; Fxsb,20473; Hedx,2753; Txmo,17226; Ibgq,23821; Jtocrnf,12910; Injgw,18062; Nshft,14611; Pydszk,22286; Seydizv,12675; Sqwbm,14358; Stjniy,15159; Fujvrs,5676; Nqygd,11921; Sgvednp,24921; Segdu,2897; Gtqz,7329; Wqkh,7086; Gzlevaj,17093; Wezpsdv,13979; Mihqnj,10182; Nhjrsd,10933; Wnfmjt,8485; Xhzyv,18859; Umtavlp,14378; Ejvuqkw,9093; Dmur,19624; Tnha,3008; Dnke,11709; Acli,10137; Vktc,22798; Nogw,15628; Oclwrvi,11536; Kafo,23844; Fsygnd,10484; Xjicq,5025; Ngfk,2299; Exhdarm,8772; Yczsqu,9520; Deztnbu,21254; Rjgc,2890; Vhydlz,24931; Zieq,25887; Psghfzn,9743; Qfpzvxo,4139; Pjxh,14910; Dhqcbs,24214; Vizuro,2334; Uxnl,10025; Dovmiq,18187; Fxhlo,20020; Rxsoqt,1746; Ztmivpy,6420; Lvegfks,12136; Mxlvfw,2211; Emgj,11509; Qfjed,13538; Mheibcg,23357; Nhcarz,4853; Fiqm,7908; Otyh,11010; Msgn,11063; Cvam,24557; Mjiedfq,9752; Ouwsac,2547; Gfvhtbr,21866; Umjoy,24362; Gcjix,5602; Jslik,23938; Yhgw,8118; Byng,4731; Simc,4300; Yuck,5234; Kelahb,6074; Ebif,5614; Inpcf,20117; Knwyhce,263; Bekn,17495; Airofb,19878; Uraj,22800; Sgxyf,3190; Azjqlh,20592; Fjbyq,14862; Pceq,8932; Wxakt,12341; Rsmwgu,25435; Nwhj,9166; Lyorxp,24895; Cakzdoj,15050; Xipewqk,15626; Ptnei,4575; Vidos,11774; Umehjr,134; Zjkcia,18944; Julap,19586; Mjgh,22671; Crybtgq,25626; Aflmx,19003; Cxzreni,12537; Hfciu,14185; Klcgsut,20544; Jmfgwv,2768; Gmflpwh,18698; Awipdjn,19070; Kpgfm,25003; Ohrkmif,6733; Sdxlkt,7322; Vynobu,10194; Njlp,11524; Lhakydn,25422; Gohyqk,21779; Tfip,21216; Qgpd,8703; Rdkvc,18726; Lywo,22460; Dalmni,5972; Bimswx,7875; Pehcfrx,21717; Jyda,10167; Owkzprv,15546; Idcs,23125; Vxygpj,620; Nvkfd,12912; Qwuhoxj,7303; Wfsnqit,18510; Miuxj,23035; Tjuicx,1840; Nyte,8286; Gfxybu,12415; Ejlpa,17728; Kjcyh,22321; Uglhkan,15889; Zuifst,25149; Sbmtdp,21384; Vudxrnm,14071; Otmlkw,12368; Sahb,21656; Advj,12225; Dbkjp,22589; Sgmadnt,11777; Figxlt,4660; Jdkxeop,13348; Hsjft,10121; Orkn,15300; Uzpoknb,1728; Irwt,23303; Xapqc,17377; Zgse,8385; Wuiekjd,20710; Tdfqms,5304; Sgbkhjx,6056; Amzjbs,5820; Apjv,17735; Xqny,11501; Hzwnf,23286; Tmocvsl,15553; Vpbn,20358; Ydcr,7694; Hbrm,8556; Vtaos,13887; Fapbc,6099; Mhrtuw,24631; Usqg,2551; Cqie,14853; Raeioy,18812; Ngzeviy,6242; Ulemcx,25307; Pbquhw,22384; Kgytaru,3489; Jspnye,7745; Hqpxbym,781; Qsyvrnk,20923; Tzink,17319; Autsj,13994; Qzaofkt,248; Rakxpt,23621; Mocnjis,20705; Pfzcn,7644; Uaqwrcm,24596; Rcfptem,3908; Ojxwsu,16837; Ywag,23367; Kheqag,25275; Zqwa,25686; Jmwyepo,21361; Pxmqfn,12468; Xpqftr,8877; Xqlfr,18097; Xlmv,11567; Ykjn,1822; Ncig,2891; Vdjz,23159; Npirk,21070; Ianx,22984; Awgeshv,5819; Pkdar,18165; Lapw,11036; Ohyv,18103; Fisjydh,17922; Sdycg,4293; Tfoiahb,11652; Vajrowf,4101; Bxrw,14807; Gviuqa,2641; Nztx,6601; Ywut,7106; Ceai,20780; Ltzdh,23285; Qaiuy,21022; Vkxuz,3744; Hrjoq,22748; Xkem,3459; Qhteyc,15609; Qxitno,14273; Eklisvw,18574; Hkxuli,14422; Vemugls,9248; Ynahb,9137; Aomfkhw,25313; Gvlqn,5877; Tcjlq,20699; Dachyi,16464; Vmwjfk,17174; Pqcunyf,10975; Cnjd,8596; Sevyjof,1479; Sdhx,20143; Dtibe,16400; Nuvpil,14708; Wtus,21164; Ptgyl,23018; Zlocg,12820; Gbzhsrj,18188; Jdwvq,762; Tixna,5499; Xfocwh,8168; Ywdnci,2780; Quwijxm,17817; Friu,19724; Mijswg,17324; Estauh,15436; Zgmk,15541; Yxhd,16835; Rsjbgp,6505; Rlsevq,15056; Lgytwk,20404; Azqhol,10843; Xjbw,8691; Lyejkar,6575; Wnxycz,15562; Absct,3439; Njorq,14899; Rfoya,18603; Onchayg,13851; Erxkjz,16346; Yuih,13559; Uhwrp,8623; Herlw,4730; Bzykth,1194; Bjehakg,11101; Hbwjmqu,6281; Pgdmwet,14334; Wfydbu,17522; Oidsvja,12711; Vcufsj,16395; Wzfbo,536; Cphbq,4617; Pbfme,6389; Glarufd,21006; Ohul,19019; Anjh,4099; Uhcy,17132; Xdkuzh,9775; Deaks,24472; Elbz,10079; Svob,15746; Fmegocl,23008; Uwpbstk,20813; Mtrsnf,1003; Fpyqol,2139; Acjh,3143; Belaw,18738; Jazl,24677; Udfws,5765; Xwjbq,4159; Gxuni,24221; Ezohd,13117; Tazjmw,15071; Hnzgbro,11144; Obwfki,8310; Febrh,22860; Ujxywei,12547; Almx,22701; Swrm,3217; Jqmzpb,20836; Qoghbv,13333; Pozah,11112; Yoil,21673; Msgwaoi,19531; Ydelus,9026; Eapljs,17692; Bmqc,10973; Vaezf,16766; Vphulz,1185; Foaqme,4038; Yeawf,18493; Udlmqs,4509; Ujsn,7758; Ntariu,173; Emnbjsl,972; Zuelsjv,20243; Nxtvhw,18352; Yxkeotu,25306; Gtqrj,21055; Hypoeca,15852; Bgca,15727; Odhlfvw,6948; Onilem,4435; Oxrcan,4843; Zxcu,14652; Yrwe,25217; Nreiaow,23540; Zraimu,15228; Altn,16950; Wdimal,1053; Hayzj,8427; Aecq,17411; Hxeym,2054; Gxzebp,22005; Ounjdz,18977; Pnzckru,9428; Wpkgcbj,9853; Fmqs,19012; Lidgbc,22206; Ledvi,24110; Aynd,9525; Xalg,25748; Zydagb,4413; Dnyspmf,21743; Jwxfc,24032; Zcurjx,24185; Wqzmbdc,12272; Tqhgyjk,24864; Ozdmcut,16064; Sban,11828; Ymrz,21232; Ateposh,7463; Ackpyfe,15072; Rhjqax,5871; Dajwsy,15267; Obhygum,7033; Rbaeqj,25653; Pcwds,3852; Bfua,5352; Vqjzsi,12083; Yzovd,6250; Nhozj,10845; Fesi,1275; Kbye,10543; Rjao,13027; Dotf,13390; Qnfhecb,21396; Fubzxr,3728; Yxster,2327; Lfryuwe,22705; Aibygm,21062; Sfkh,6294; Taqd,21462; Mfjnsq,4168; Rnis,24299; Rekpwf,10779; Yjktfci,9787; Fkhois,20585; Cwmd,8527; Iakjz,21738; Asigru,18865; Sipwlo,8836; Favjcp,19225; Wydaul,8654; Keltyp,13583; Galby,7685; Epngqy,14688; Aliwx,21321; Wlot,12539; Ahjlbd,20052; Fetvdj,23868; Agxj,24094; Stvan,11415; Snxbd,22288; Xpumrs,6852; Lmqbr,15518; Dfwy,12012; Htwuk,10088; Pnksczr,20487; Htpobxq,12869; Xwijfmk,6748; Mgku,11040; Tupls,25039; Byfmuv,23794; Syudix,8010; Syfmvqc,1655; Ivmzr,1671; Pvis,17842; Pksgca,6843; Iarqdl,24203; Lqfpx,21278; Hqpxsc,22605; Wjqhmb,7945; Nfug,18185; Wihxb,4583; Whrnof,5660; Hketrpm,11496; Wzasj,2950; Dxlesa,6915; Oanmjv,21376; Qyzosva,21295; Ouiyemp,309; Rfsnm,2624; Zevbg,21695; Pylzdsw,23459; Ipxns,9870; Ufwhk,23347; Wahfxic,11813; Xsbuof,18154; Fagkct,4063; Nhgc,3479; Qbigpj,20879; Ntgfscw,7784; Jvya,21684; Iskme,12954; Zkcju,4976; Mvus,23233; Siwxd,12846; Nimpgt,17650; Bcnu,23389; Ckunp,15597; Rlxpysn,20029; Xygm,9480; Gnmfd,4349; Xznqso,23993; Rxysfl,23169; Jlhaqc,19071; Yjvw,12445; Nqrpfos,6376; Vlcq,7475; Puaemi,15564; Yuws,7214; Teyhl,8443; Uyjpwrq,7387; Vuxpn,10793; Iwznau,21406; Cqlad,8313; Vfpw,6799; Zokt,15100; Fwjb,17807; Dsrgp,24129; Mocixz,22819; Xphqy,15602; Zvwn,2451; Ldjn,1609; Mqbgj,5863; Otazr,25965; Mxbhtzj,10751; Gwcdz,23778; Srczal,25594;";
		String[] tokens = line.split(";");
		HashMap cities = new HashMap<String, Integer>();
		for (int i  = 0; i < tokens.length;i++) {
			String[] seperate = tokens[i].split(",");
			cities.put(seperate[0], Integer.parseInt(seperate[1]) ); //insert into map: city as key and distance to it as value
		}
		Integer[] dist = (Integer[])cities.values().toArray(new Integer[cities.values().size()]  ); //create Integer array
		Arrays.sort(dist);
		int currentDistance = 0;
		int lastDistance = 0;
		StringBuilder str  = new StringBuilder();
		for (int i = 0; i < dist.length; i++) {
			lastDistance = currentDistance;
			currentDistance = dist[i];
			//System.out.println("Current: " + currentDistance);
			//System.out.println("last: " + lastDistance);
			if (i == 0) str.append(currentDistance + ",");
			
			else {//not the first and closest city
				str.append(  (currentDistance-lastDistance) + ","  );
			}//end else
			
		}//end for: string generated
		
		System.out.println(str.substring(0,str.length()-1).toString());

	}//end main
	
}
	
